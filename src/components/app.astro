---
import Card_2x1 from "./card_2x1.astro";
import Card_2x2 from "./card_2x2.astro";
import Card_4x2 from "./card_4x2.astro";
import Card_8x1 from "./card_8x1.astro";
import Articles_List from "./articles_list.astro";
import info from "../data/info";
// const showCV = false;
---

<div class="container m-auto lg:max-xl:w-min main">
  <div
    class="xl:flex xl:flex-row xl:justify-between max-w-screen-2xl px-2 xs:px-5 lg:px-10"
  >
    <aside
      class="min-w-full md:min-w-0 xl:basis-1/3 xl:h-screen xl:sticky xl:top-0"
    >
      <div class="pt-10 xl:pt-20"></div>
      <div class="animate-on-scroll animate-entrance delay-100">
      <div class="w-64">
        <img
          class="w-32 h-32 md:w-52 md:h-52 rounded-full"
          src={info.imgUrl}
          alt={info.title}
        />
        <div class="pt-10"></div>
        <h1 class="text-3xl font-bold pl-2">{info.title}</h1>
        <p class="text-lg pl-2">{info.desc}</p>
        </div>
      </div>
    </aside>

    <main>
      <div class="pt-10 xl:pt-20"></div>
      <div class="grid grid-cols-4 gap-x-4 lg:gap-x-8 lg:w-[54rem]">
        <div class="col-span-4 md:col-span-2">
          <div class="animate-on-scroll animate-entrance duration-500 delay-100">
            <div class="transition-transform duration-300 ease-bounce hover:-translate-y-2">
            <Card_4x2 info={info.titleCard} />
            </div>
          </div>
          <div class="animate-on-scroll animate-entrance duration-500 delay-200">
            <div class="transition-transform duration-300 ease-bounce hover:-translate-y-2">
            <Card_4x2 info={info.blogCard} />
            </div>
        </div>
        </div>

        <div class="hidden md:block col-span-2">
          <div class="animate-on-scroll animate-entrance duration-500 delay-125">
            <div class="transition-transform duration-300 ease-bounce hover:-translate-y-2">
            <Card_2x1 info={info.primaryCards[0]} />
            </div>
          </div>
          <div class="animate-on-scroll animate-entrance duration-500 delay-150">
            <div class="transition-transform duration-300 ease-bounce hover:-translate-y-2">
            <Card_2x1 info={info.primaryCards[2]} />
            </div>
          </div>
          <div class="animate-on-scroll animate-entrance duration-500 delay-175">
            <div class="transition-transform duration-300 ease-bounce hover:-translate-y-2">
            <Card_2x1 info={info.primaryCards[3]} />
            </div>
          </div>
          <div class="animate-on-scroll animate-entrance duration-500 delay-200">
            <div class="transition-transform duration-300 ease-bounce hover:-translate-y-2">
            <Card_2x1 info={info.primaryCards[1]} />
            </div>
          </div>
        </div>

        <!-- APIÂàóË°® -->
        <div class="col-span-4">
          <div class="animate-on-scroll animate-entrance delay-300">
          <Card_8x1 info={info.sectionTitles[0]} />
          </div>
          <div class="animate-on-scroll animate-entrance delay-400">
            <div class="transition-transform duration-300 ease-bounce hover:-translate-y-1">
          <Articles_List />
          </div>
          </div>
        </div>

        <!-- ‰∏™‰∫∫È°πÁõÆ -->
        <!-- <div class="col-span-4">
          <Card_8x1 info={info.sectionTitles[1]} />
        </div>
        <div class="col-span-4 md:col-span-2">
          <Card_4x2 info={info.projectCardStart} />
        </div>
        {
          info.projectCards.map((card) => (
            <div class="col-span-4 sm:col-span-2 md:col-span-1">
              <Card_2x2 info={card} />
            </div>
          ))
        }
        <div class="col-span-4 md:col-span-2">
          <Card_4x2 info={info.projectCardEnd} />
        </div> -->

        <!-- Èü≥‰πêÂàõ‰Ωú -->
        <!-- <div class="col-span-4">
          <Card_8x1 info={info.sectionTitles[2]} />
        </div>
        {
          info.musicCards.map((card) => (
            <div class="col-span-4 md:col-span-2">
              <Card_4x2 info={card} />
            </div>
          ))
        } -->

        <!-- ÂÖ≥Ê≥®Áø†Áø† -->
        <div class="md:hidden col-span-4">
          <Card_8x1 info={info.sectionTitles[3]} />
        </div>
        {
          info.primaryCards.map((card) => (
            <div class="md:hidden sm:col-span-2 col-span-4">
              <Card_2x1 info={card} />
            </div>
          ))
        }

        <!-- ËÅîÁ≥ªÊñπÂºè -->
        <div class="col-span-4">
          <div class="animate-on-scroll animate-entrance delay-450">
          <Card_8x1 info={info.sectionTitles[4]} />
          </div>
        </div>
        {
          info.teleCards.map((card) => (
            <div class="col-span-4 md:col-span-2">
            <div class="animate-on-scroll animate-entrance delay-550">
              <div class="transition-transform duration-300 ease-bounce hover:-translate-y-2">
              <Card_2x1 info={card} />
              </div>
              </div>
            </div>
          ))
        }
      </div>

      <div class="pt-12"></div>
      <footer class="text-center">
        
        <!-- <div>
          üöÄ powered by <a
            href="https://tailwindcss.com/"
            target="_blank"
            class="text-gray-400">tailwindcss</a
          >
          <a href="https://astro.build/" target="_blank" class="text-gray-400"
            >astro</a
          >
        </div>
        <div>
          üí° inspired by <a
            href="https://bento.me"
            target="_blank"
            class="text-gray-400">bento.me</a
          >
        </div> -->
        

        <div class="beian">
          <a
            href="https://beian.miit.gov.cn"
            rel="noreferrer"
            target="_blank"
            class="text-gray-400">Ëµ£ICPÂ§á2025059789Âè∑</a
          > | <a href="https://beian.mps.gov.cn/#/query/webSearch?code=36020002000597" rel="noreferrer" target="_blank">Ëµ£ÂÖ¨ÁΩëÂÆâÂ§á36020002000597Âè∑</a>
        </div>

        <div class="">
          Special thanks to ‚ù§Ô∏è <a
            href="https://idealclover.top"
            target="_blank"
            class="text-gray-400">idealclover</a
          >
          ,&nbsp;Who open-sourced this webpage
        </div>
       
      </footer>
      <div class="pt-10"></div>
    </main>
  </div>
</div>

<style>
  @tailwind components;
@layer components {
  .animate-entrance {
    @apply opacity-0 translate-y-10 transition-all duration-700 ease-out [&.visible]:opacity-100 [&.visible]:translate-y-0;
  }
}

  .mail {
    background: url("https://image.idealclover.cn/projects/Homepage/icons/icons.png") -0px -0px
      no-repeat;
    width: 64px;
    height: 64px;
  }
  .QQ {
    background: url("https://image.idealclover.cn/projects/Homepage/icons/icons.png") -64px -0px
      no-repeat;
    width: 64px;
    height: 64px;
  }
  .telegram {
    background: url("https://image.idealclover.cn/projects/Homepage/icons/icons.png") -128px -0px
      no-repeat;
    width: 64px;
    height: 64px;
  }
  .twitter {
    background: url("https://image.idealclover.cn/projects/Homepage/icons/icons.png") -192px -0px
      no-repeat;
    width: 64px;
    height: 64px;
  }
  .ease-out {
    transition-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
  }

  
  .ease-bounce {
    transition-timing-function: cubic-bezier(0.34, 1.56, 0.64, 1);
  
}
</style>

<script>
  // Êõ¥Êñ∞Á≤â‰∏ùÊï∞
  import updateInfo from "../data/update";

  document.addEventListener("DOMContentLoaded", () => {
    const animateElements = document.querySelectorAll('.animate-on-scroll');
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          observer.unobserve(entry.target); // Ëß¶Âèë‰∏ÄÊ¨°ÂêéÂèñÊ∂àËßÇÂØü
        }
      });
    }, {
      threshold: 0.1, // ÂΩìÂÖÉÁ¥† 10% ËøõÂÖ•ËßÜÂè£Êó∂Ëß¶Âèë
      rootMargin: '0px 0px -50px 0px' // Â∫ïÈÉ®ÊèêÂâç 50px Ëß¶Âèë
    });

    animateElements.forEach(element => observer.observe(element));

    updateInfo.forEach((item) => {
      fetch(item.updateUrl)
        .then((response) => response.json())
        .then((data) => {
          const element = document.querySelector(`.${item.className}`);
          if (data.count == null) return;
          if (element) element.textContent = data.count + " Followers";
        })
        .catch((error) => console.error("Error:", error));
    });
  });
</script>
